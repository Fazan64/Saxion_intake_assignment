<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Show the current stats of the game (current health, score and wave)

// Set draw settings
draw_set_font(font_small);
draw_set_color(c_white);
draw_set_halign(fa_left);

var line_height = 25;
var side_offset = 25;

var xx = view_xview[0] + side_offset;
var yy = view_yview[0] + side_offset;

// Draw health
var health_color = c_green;
var health_alpha = 1.0;

var message = "Health " + string(obj_turret.health_points);
draw_text_colour(xx, yy, message, health_color, health_color, health_color, health_color, health_alpha);
yy += line_height;

// Draw score
var message = "Score  " + string(score);
draw_text(xx, yy, message);
yy += line_height;

// Draw wave
var message = "Wave   " + string(obj_wave_manager.current_wave_num);
draw_text(xx, yy, message);

draw_reset();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Display the number of bombs available 

var offset_y = 16;

draw_set_font(font_small);
draw_set_color(c_white);
draw_set_halign(fa_center);

with (obj_turret) {

    var xx = x;
    var yy = y + offset_y;
        
    var icon_width = obj_config.bomb_icon_size;
    var icon_height = obj_config.bomb_icon_size;
    
    // Draw small bomb icons below the turret
    // arranged in multiple rows
    
    var max_icons_per_row = obj_config.bomb_icon_max_per_row;
    var row_height = icon_height;
    
    var num_rows = 1;
    var num_in_last_row = num_bombs;
    while (num_in_last_row &gt; max_icons_per_row) {
        num_rows += 1;
        num_in_last_row -= max_icons_per_row;
    }
    
    for (var row_num = 1; row_num &lt;= num_rows; row_num += 1) {
        
        var num_in_this_row;
        if (row_num == num_rows) {
            num_in_this_row = num_in_last_row;
        } else {
            num_in_this_row = max_icons_per_row;
        }
        
        var row_x = xx;
        var row_y = yy + row_height * row_num;
        
        draw_sprite_row(
            spr_bomb, 
            0, 
            row_x, 
            row_y, 
            icon_width, 
            icon_height, 
            num_in_this_row
        );
    }
}

draw_reset();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
