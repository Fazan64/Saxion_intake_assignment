<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Start a new wave if there are no enemies left

if (instance_exists(obj_enemy)) {
    exit;
}

// We get here if no enemies are left
// so a new wave should get started

if (!next_wave_imminent) {

    next_wave_imminent = true;
    next_wave_countdown = obj_config.time_between_waves * room_speed;
    
    with (obj_turret) {
        can_shoot_bombs = false;
    }
    
    waves_before_repair -= 1;
}

next_wave_countdown -= 1;
if (next_wave_countdown &gt; 0) {
    exit;
}

start_next_wave();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Exit if the next wave isn't imminent

if (!next_wave_imminent) {
    exit;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Display a message about the next wave

var xx = view_xview[0] + view_wview[0] / 2;
var yy = view_yview[0] + view_hview[0] / 4;

draw_set_font(font_medium);
draw_set_halign(fa_middle);
draw_set_valign(fa_center);

var message = "wave " + string(current_wave_num + 1);
draw_text(xx, yy, message);

draw_reset();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Display the score bonus from bombs

var font = font_medium;
var font_size = font_get_size(font);

var xx = view_xview[0] + (view_wview[0] / 2);
var yy = view_yview[0] + (view_hview[0] * 3 / 4) + font_size;

draw_set_font(font);
draw_set_halign(fa_middle);
draw_set_valign(fa_center);

var total_num_bombs = 0;
with (obj_turret) {
    total_num_bombs += num_bombs;
}

var bomb_points_bonus = obj_config.bomb_score_value * total_num_bombs;

// Draw the message with spr_bomb instead of the word 'bomb'

var message_before_icon = string(total_num_bombs) + ' ';
var message_after_icon = ' = ' + string(bomb_points_bonus);
var message = message_before_icon + message_after_icon;

// Draw the message
draw_text(xx, yy, message);

var icon_x = (
    xx
    - font_size * string_length(message) / 2
    + font_size * string_length(message_before_icon)
);

var icon_y = yy;

// Draw the 'bomb' sprite 
draw_sprite_size(spr_bomb, 0, icon_x, icon_y, font_size, font_size);

draw_reset();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Display an imminent repair if present

if (waves_before_repair &gt; 0) {
    exit;
}

var repair_needed = false;
with (obj_turret) {
    if (health_points &lt; max_health_points) {
        repair_needed = true;   
    }
}

if (!repair_needed) {
    exit;
}


var font = font_medium;
var font_size = font_get_size(font);

var xx = view_xview[0] + (view_wview[0] / 2);
var yy = view_yview[0] + (view_hview[0] * 3 / 4) + 2 * font_size;

draw_set_font(font_medium);
draw_set_halign(fa_middle);
draw_set_valign(fa_center);

var message = 'Repair = ' + string(obj_config.repair_health) + ' health';
draw_text(xx, yy, message);

draw_reset();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
